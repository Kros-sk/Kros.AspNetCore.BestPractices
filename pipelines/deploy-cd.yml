trigger: none

resources:
  pipelines:
  - pipeline: ToDosDemoServices
    source: Kros.AspNetCore.BestPractices - CI
    #trigger: false
  - pipeline: ToDosDemoClient
    source: Kros.Angular.BestPractices - CI
    #trigger: false

variables:
  azureSubscriptionName: 'KROS DEVEL SUBSCRIPTION'
  Stage: empty

stages:
- stage: Development
  displayName: 'Deploy to development'
  jobs:
  - deployment: Services
    pool: Default
    environment: development
    strategy:
      runOnce:
        deploy:
          steps:
          - download: ToDosDemoServices
            artifact: drop
            displayName: 'Download services artifacts'

          - task: AzureCLI@2
            displayName: Deploy microservices
            inputs:
              azureSubscription: $(azureSubscriptionName)
              scriptType: ps
              scriptLocation: scriptPath
              scriptPath: '$(Pipeline.Workspace)\ToDosDemoServices\drop\pipelines\Deploy-Async.ps1'
              arguments: -microservices 'ToDos', 'Authorization', 'Organizations', 'ApiGateway' -artifactPath '$(Pipeline.Workspace)\ToDosDemoServices\drop\'

          - template: postman-tests.yml

  - deployment: Client
    pool: Default
    environment: development
    strategy:
      runOnce:
        deploy:
          steps:
          - template: deploy-client.yml
            parameters:
              storageAccount: 'krosdemostorage'

          - download: ToDosDemoClient
            artifact: cypress
            displayName: 'Download client app artifacts'

          - download: ToDosDemoClient
            artifact: cypress_config
            displayName: 'Download client app artifacts'

          - task: ExtractFiles@1
            displayName: 'Extract tests files'
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/ToDosDemoClient/cypress/cypress*.zip'
              destinationFolder: 'cypress'

          - task: eliostruyf.build-task.custom-build-task.file-creator@5
            displayName: 'Create cypress config file'
            inputs:
              fileoverwrite: true
              filepath: 'cypress/cypress.json'
              filecontent: |
                {
                  "integrationFolder": "cypress/cypress/integration",
                  "projectId": "u3uuhi",
                  "baseUrl": "https://demo.todos.kros.wtf",
                  "chromeWebSecurity": false,
                  "ProjectName": "Demo.BestPractices",
                  "OAuthUrl": "https://login.kros.wtf",
                  "OAuthClientId": "Demo.BestPractices.Postman",
                  "OAuthUsername": "integrationtests@kros.sk",
                  "OAuthPassword": "integrationtests",
                  "UserEmail": "integrationtests@kros.sk",
                  "UserName": "Integration Tests",
                  "reporter": "junit",
                  "reporterOptions": {
                    "mochaFile": "cypress/cypress/test-output-[hash].xml",
                    "toConsole": true,
                    "attachments": true
                    },
                    "video": false,
                    "pluginsFile": "cypress/cypress/plugins/index.js",
                    "supportFile": "cypress/cypress/support/index.js"
                }
              endWithNewLine: true


          - script: 'npx cypress run --record --key f6df6669-db0d-4228-9368-242987f124b9'
            displayName: 'Run tests with Cypress'
            continueOnError: true
            timeoutInMinutes: 10

          - task: PublishTestResults@2
            displayName: 'Publish Test Results'
            inputs:
              searchFolder: '$(Pipeline.Workspace)/ToDosDemoClient/cypress'
              mergeTestResults: true
              testRunTitle: 'Cypress Test Results'

